//rgb(red, green, blue)
//rgba(red, green, blue, alpha)

color: #DDD
text-align: center|left|right|justify
text-decoration: none|underline|overline|line-through //chỉnh sửa design của text 
(thường dùng để chỉnh text link)
text-transform: uppercase|lowercase|capitalize (chữ đầu tiên từng từ in hoa)
text-indent: 10px //lùi đầu dòng text
letter-spacing: 5px // khoản cách từng chữ
word-spacing: 10px //khoản cách từng từ
line-height: 1.2 //khoản cách giữa các dòng
text-shadow: x y color blur //đổ bóng cho chữ

//Internal CSS: dùng thẻ style trong file html
//External CSS: dùng css từ file bên ngoài - được khuyên dùng
//Inline CSS: viết CSS trực tiếp trong thẻ hiện hành - hạn chế dùng

//font-family: font1, font2, font3 - browser check từ trái sang
 và thực hiện cái nào hiện hữu đầu

//padding: khoảng cách từ border đến content
//padding: top right botton left;
//padding: top left-right bottom;
//padding: top-bottom left-right;
//padding: all;

//margin: khoảng cách bên ngoài border (khoản cách các component với nhau)
//margin: top right botton left;
//margin: top left-right bottom;
//margin: top-bottom left-right;
//margin: all;

syntax
//border-width: 1px - chỉnh độ rộng border
//border-styled: solid| dotted| dashed|.... - kiểu hiển thị của border
//border-color: red - có thể thay đổi theo màu text

shortHand
//border: 1px solid red; (width - styled - color)

Note
//border-width: top right botton left;
//border-width: top left-right bottom;
//border-width: top-bottom left-right;
//border-top-width: 1px
//border-right-width: 1px
.....

//border-radius: 5px - dộ bo góc của border

//backgroung-color: color;
//backgroung-color: transparent;
//backgroung-color: gradient;

web: https://cssgradient.io

abstract item: hình ảnh họa lặp đi lặp lại tạo họa tiết
//background-size: 20%;
//background-repeat: no-repeat; - ko cho lặp img

//background-size: contain; - auto fix hình ảnh vào khung (hiển thị 100% img trong khung đó)
//background-size: cover; - làm img bao trọn khung hình
//background-position: x y| center;
//background-attachment: fixed;

Selector
//a:link - default chỉ element chưa đc click bh
//a:visited - đã đc click rồi
//a:hover - trỏ chuột lên
//a:active - click vào chưa thả ra

Inline vs block
//inline: là element có chiều rộng tương đương chiều rộng content - ko chỉnh đc margin top bottom, còn padding thì bth
//block: chiếm 1 hàng

CSS combinator
//descendant selector (space)
.list-1 .item: tìm trong list-1 những element con có class= item

//child selector (>)
.list-1 > .item: tìm trong list-1 những element con có class= item mà ko phải những element cháu

//adjacent sibling selector (+)
.list-1 .item-2 + .item: tìm trong list-1 element .item-2 và select 1 element 
tiếp theo của .item-2 có class là .item

//general sibling selector (~)
.list-1 .item-2 + .item: tìm trong list-1 element .item-2 và select toàn bộ element 
tiếp theo của .item-2 có class là .item

Pseudo-classes: định nghĩa trạng thái của element
important: ::after, ::before, :hover,.....

//layout: cách bố trí các components
//component: là những cái có thể dùng đi dùng lại

FLEX
//display: flex; 
//flex-direction: row - default| column; - chiều của flex

//justify-content: flex-start*| flex-end |center| space-between
|space-around|space-evenly; - căn chỉnh vị trí của item

//align-items: flex-start | flex-end| center| baseline| stretch*; 
- căn chỉnh item theo hướng vuông góc với flex direction

//flex-basis: <length>; - thay đổi chiều rộng item theo chiều flex direction, áp dụng cho item bên trong container
//flex-grow: <number>; - phân bổ chỗ trống còn thừa cho item, chỉ tác dụng khi container còn thừa chỗ tróng
//flex-shrink: 1*|<number>; - khi độ rộng element vượt quá container thì shrink sẽ chia lại cho đúng tỉ lệ
công thức: flexBasis * (1 + shrinkFactor / sumScaledShrinkFactors * remainingFreeSpace)
//order: 0*| <number>; - thay đổi thứ tự hiển thị các element trong container

POSITION - thay đổi vị trí element
//position: static* - đứng nguyên | 
||relative - không thay đổi thuộc tính element cho đến khi truyền thuộc tính cho nó
và ko làm thay đổi vị trí các element xung quanh 
|| fixed - di chuyển element tương đối theo độ rộng trình duyệt
|| absolute - di chuyển 1 cách tương đối so với parent element gần nhất có set thuộc tính relative
|| sticky

FLOAT: làm nổi element - specifies how an element should float.
//clear: left; - ko muốn thằng float nào nằm bên trái
//cách clear float
.wrapper::after{
    content: '';
    display: block;
    clear: both;
}

CSS SELECTOR
a[target]{
	color: red;
}

--đổi thẻ a có value target thành màu đỏ
input[type="text"]{
            border-color: tomato;
}
--đổi thẻ input có type="text" thành màu đỏ

//CSS Specificity: css cụ thể =))
important > inline css > id > classes
Có 1 quy tắc nên nhớ trong viết CSS là hạn chế tối đa dùng các selector khác thay vào đó cố gắng sử dụng class selector. 
Điều này giúp viết code css ít bị lỗi hơn.


CSS 2D Transform (visit codrop)
//translate - dịch chuyển tọa độ
//rotate - xoay element
//scale - phóng to thu nhỏ
//skew - biến dạng méo đi
//matrix - 

CSS transition
//transition-delay
//transition-duration
//transition property
//transition-timing-function

transition: background-color: 0.5s;

mediaQuey=> mobile first

GRID: làm layout cho toàn bộ trang
.wrapper{
    display: grid;
    grid-template-columns: 2fr 1fr;
}

.header, .footer{
    /* grid-column-start: 1;
    grid-column-end: 3; */
    grid-column: 1/3;
}

px

em: 1em = font size của parent - thay đổi dựa theo parent

rem 1 rem = font size của trình duyệt- đổi dựa theo trình duyệt